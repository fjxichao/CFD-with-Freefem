
/*
*FreeFem + + 与偏微分方程有限元数值计算
*NS-backward.edp
*/

real ite=1.0,nu=0.005,TOL=1.0e-6;
int hk=4,k1=2*hk,k2=8*hk,k3=2*hk,k4=16*hk,k5=3*hk,k6=20*hk;
int it = 0,M=100;
func u0 = y*(2-y);

border a1(t=1,0){x= -4; y=2*t; label=11;};
border b1(t=0,1){x= -4+4* t; y=0;label=10;};
border c1(t=0,1){x=0; y= -t;label=10;};
border d1( t =0,1) { x =16* t; y = -1; label=10;};
border e1(t=0,1){x=16; y= -1+3* t;label=12;};
border f1(t=1,0){x= -4+20* t;y=2;label=10;};

mesh Th = buildmesh(a1(k1)+b1(k2)+c1(k3)+d1(k4)+e1(k5)+f1(k6));


fespace Uh(Th,P2);
Uh u1,u2,v1,v2,oldu1,oldu2;

fespace Ph(Th,P1);
Ph p,q;

problem NSOseen( [u1,u2,p],[v1,v2,q])=    int2d( Th) ( nu* ( dx(u1) * dx(v1) +dy(u1)* dy(v1) + dx(u2) * dx(v2) + dy(u2) * dy (v2)) 
               +oldu1* dx(u1) * v1 +oldu2* dy(u1) * v1 
               +oldu1* dx(u2) * v2 +oldu2* dy(u2) * v2               -p* (dx(v1) +dy(v2)) +q* (dx(u1) + dy(u2)))   + on(10,u1 =0,u2 =0) + on(11,u1 = u0, u2=0) +on(12,u2=0);

u1=0;u2=0; 

while(ite>TOL && it < M) {
  it ++;
  oldu1=u1;oldu2=u2;
  NSOseen;
  real iterr = sqrt(int2d(Th)((u1-oldu1)^2+(u2-oldu2)^2));
  real itnorm = sqrt(int2d(Th)((u1)^2 + (u2)^2));
  if(itnorm < 1.0e-30){
    itnorm = 1.0e-30; 
  }
  ite = iterr/itnorm;
}

plot([u1,u2],wait=1,value=1);
plot(p,wait=1,value=1);
plot([u1,u2],p,wait=1,value=1);